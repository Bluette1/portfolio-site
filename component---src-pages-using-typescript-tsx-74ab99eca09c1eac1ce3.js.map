{"version":3,"file":"component---src-pages-using-typescript-tsx-74ab99eca09c1eac1ce3.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport \"../styles/header.css\"\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1>Marylene Sawyer</h1>\n        <h2>Software | Web Developer</h2>\n        <nav className=\"navbar\">\n          <div className=\"menu-toggle\" onClick={toggleMenu}>\n            ☰ {/* Hamburger icon */}\n          </div>\n          <section className={`navbar-links ${isOpen ? \"open\" : \"\"}`}>\n            <div className={`nav-links`}>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"#about\">Bio</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </div>\n            <div className=\"social-links\">\n              <a\n                href=\"https://linkedin.com/in/yourprofile\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                LinkedIn\n              </a>\n              <a\n                href=\"https://twitter.com/yourprofile\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Github\n              </a>\n              <a\n                href=\"https://dribbble.com/yourprofile\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Medium\n              </a>\n              <a\n                href=\"https://dribbble.com/yourprofile\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Blog\n              </a>\n            </div>\n          </section>\n        </nav>\n      </header>\n      <svg\n        data-name=\"Layer 1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 1200 120\"\n        preserveAspectRatio=\"none\"\n        className=\"shape\"\n      >\n        <defs>\n          <linearGradient id=\"gradient1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n            <stop\n              offset=\"0%\"\n              style={{ stopColor: \"#35424a\", stopOpacity: 1 }}\n            />\n            <stop\n              offset=\"100%\"\n              style={{ stopColor: \"#1a1d20\", stopOpacity: 1 }}\n            />\n          </linearGradient>\n        </defs>\n        {/* <path\n          d=\"M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z\"\n          opacity=\".25\"\n          fill=\"url(#gradient1)\"\n        ></path>\n        <path\n          d=\"M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z\"\n          opacity=\".5\"\n          fill=\"url(#gradient1)\"\n        ></path> */}\n        <path\n          d=\"M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z\"\n          fill=\"url(#gradient1)\"\n        ></path>\n      </svg>\n    </>\n  )\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","isOpen","setIsOpen","useState","className","onClick","target","rel","xmlns","viewBox","preserveAspectRatio","id","x1","y1","x2","y2","offset","style","stopColor","stopOpacity","d","fill","children","useStaticQuery","siteTitle","siteMetadata","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}