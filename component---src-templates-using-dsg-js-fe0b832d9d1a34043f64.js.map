{"version":3,"file":"component---src-templates-using-dsg-js-fe0b832d9d1a34043f64.js","mappings":"6JA6DA,IAzDe,KACb,MAAM,EAACA,EAAO,EAACC,IAAaC,EAAAA,EAAAA,WAAS,GAMrC,OACE,0BAAQC,UAAU,UAChB,0BAAI,mBACJ,0BAAI,4BACJ,uBAAKA,UAAU,UACb,uBAAKA,UAAU,cAAcC,QAThB,KACjBH,GAAWD,EAAO,GAQoC,MAGlD,2BAASG,UAAS,iBAAkBH,EAAS,OAAS,KACpD,uBAAKG,UAAS,aACZ,gBAAC,EAAAE,KAAI,CAACC,GAAG,aAAY,YACrB,gBAAC,EAAAD,KAAI,CAACC,GAAG,UAAS,OAClB,gBAAC,EAAAD,KAAI,CAACC,GAAG,YAAW,YAEtB,uBAAKH,UAAU,gBACb,qBACEI,KAAK,sCACLC,OAAO,SACPC,IAAI,uBACL,YAGD,qBACEF,KAAK,kCACLC,OAAO,SACPC,IAAI,uBACL,UAGD,qBACEF,KAAK,mCACLC,OAAO,SACPC,IAAI,uBACL,UAGD,qBACEF,KAAK,mCACLC,OAAO,SACPC,IAAI,uBACL,WAMA,C,yDCPb,IArCe,IAAmB,IAAD,MAAjB,SAAEC,GAAU,EAC1B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,IAAM,CAACC,WAAiC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,UAChD,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAOV,GACP,0BACEO,MAAO,CACLI,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,gBAC5B,IACA,qBAAGjB,KAAK,4BAA2B,YAGtC,C,+CCFP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEkB,EAAW,MAAET,EAAK,SAAEN,GAAU,EAC3C,MAAM,KAAEI,IAASF,EAAAA,EAAAA,gBAAe,YAc1Bc,EAAkBD,GAAeX,EAAKC,aAAaU,YACnDE,EAAgC,QAApB,EAAGb,EAAKC,oBAAY,aAAjB,EAAmBC,MAExC,OACE,gCACE,6BAAQW,EAAkBX,EAAK,MAAMW,EAAiBX,GACtD,wBAAMY,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASb,IACnC,wBAAMc,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAf,EAAKC,oBAAY,aAAjB,EAAmBgB,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASb,IACpC,wBAAMY,KAAK,sBAAsBC,QAASH,IACzChB,EAGP,C,6GCpCA,MAiBasB,EAAO,IAAM,gBAAC,IAAG,CAAChB,MAAM,cAErC,UAnBiB,IACf,gBAAC,IAAM,KACL,0BAAI,gBACW,yBAAG,aAElB,yBAAG,uDACH,yBAAG,kCAC+B,IAChC,qBAAGT,KAAK,yFAAwF,kDAE5F,KAGN,gBAAC,EAAAF,KAAI,CAACC,GAAG,KAAI,2B","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/templates/using-dsg.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport \"../styles/header.css\"\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <header className=\"header\">\n      <h1>Marylene Sawyer</h1>\n      <h2>Software | Web Developer</h2>\n      <nav className=\"navbar\">\n        <div className=\"menu-toggle\" onClick={toggleMenu}>\n          ☰ {/* Hamburger icon */}\n        </div>\n        <section className={`navbar-links ${isOpen ? \"open\" : \"\"}`}>\n          <div className={`nav-links`}>\n            <Link to=\"/projects\">Projects</Link>\n            <Link to=\"#about\">Bio</Link>\n            <Link to=\"/contact\">Contact</Link>\n          </div>\n          <div className=\"social-links\">\n            <a\n              href=\"https://linkedin.com/in/yourprofile\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              LinkedIn\n            </a>\n            <a\n              href=\"https://twitter.com/yourprofile\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Github\n            </a>\n            <a\n              href=\"https://dribbble.com/yourprofile\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Medium\n            </a>\n            <a\n              href=\"https://dribbble.com/yourprofile\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Blog\n            </a>\n          </div>\n        </section>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingDSG = () => (\n  <Layout>\n    <h1>\n      Hello from a <b>DSG Page</b>\n    </h1>\n    <p>This page is not created until requested by a user.</p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/deferred-static-generation/\">\n        documentation about Deferred Static Generation\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"Using DSG\" />\n\nexport default UsingDSG\n"],"names":["isOpen","setIsOpen","useState","className","onClick","Link","to","href","target","rel","children","data","useStaticQuery","siteTitle","site","siteMetadata","title","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","name","content","property","author","Head"],"sourceRoot":""}